name: CI/CD Pipeline

on:
  push:
    branches: 
      - main
      - master
  pull_request:

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read

jobs:

  lint:
    name: Lint Code
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Run Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60

  build:
    name: Build Project
    runs-on: ubuntu-24.04
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Build Project
        run: go build -ldflags="-s -w" -o ./bin/server ./cmd/server

  test:
    name: Run Tests
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Run Tests
        run: go test -coverpkg=./internal/handler,./internal/service,./internal/repository -coverprofile=./coverage.out ./test/server/...
      - name: Gen Coverage Report
        run: go tool cover -html=./coverage.out -o coverage.html

  deploy:
    name: Deploy 
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: yourdockerhubusername/your-repo-name:latest
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
